<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xmlns:aop="http://www.springframework.org/schema/aop"
	     xmlns:tx="http://www.springframework.org/schema/tx"
	      xmlns:context="http://www.springframework.org/schema/context"
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
        <!-- 扫描 -->
        <context:component-scan base-package="org.wjw"></context:component-scan>
        <!-- 0.1加载properties -->
        <context:property-placeholder location="classpath:*.properties"/>
          <!-- 0.2配置数据源 -->
       <!--  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
          <property name="driverClass" value="${jdbc.driverClass}"></property>
          <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
          <property name="user" value="${jdbc.user}"></property>
          <property name="password" value="${jdbc.password}"></property>
        </bean> -->

      <!--   0.2配置数据源 -->
      <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
   <!--  基本属性 url、user、password   -->
    <property name="url" value="${jdbc.jdbcUrl}" />  
    <property name="username" value="${jdbc.user}" />  
    <property name="password" value="${jdbc.password}" />  
    <property name="driverClassName" value="${jdbc.driverClass}" />
  <!--   配置初始化大小、最小、最大   -->
    <property name="initialSize" value="1" />  
    <property name="minIdle" value="1" />   
    <property name="maxActive" value="20" />  
   
   <!--  配置获取连接等待超时的时间   -->
    <property name="maxWait" value="60000" />  
   
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
   
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒   -->
    <property name="minEvictableIdleTimeMillis" value="300000" />  
    
    <property name="validationQuery" value="SELECT 'x'" />  
    <property name="testWhileIdle" value="true" />  
    <property name="testOnBorrow" value="false" />  
    <property name="testOnReturn" value="false" />  
   
    <!-- 打开PSCache，并且指定每个连接上PSCache的大小   -->
    <property name="poolPreparedStatements" value="true" />  
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
   
<!--     配置监控统计拦截的filters，去掉后监控界面sql无法统计   -->
    <property name="filters" value="stat" />   
</bean>  
 <!--  1.配置 SessionFactory -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
  <!--  1.1配置数据源 -->
  <property name="dataSource" ref="dataSource"/>
<!--   1.2 其他配置项，要使用Hibernate全属性名，如果Hibernate.不要省略 -->
  <property name="hibernateProperties">
  <props>
<!--   数据库方言定义 -->
  <prop key="hibernate.dialect">
    org.hibernate.dialect.MySQL5Dialect
  </prop>
 <!--  向控制台显示执行的SQL语句 -->
  <prop key="hibernate.show_sql">true</prop>
<!--   创建SessionFactory对象时自动创建数据库表 -->
  <prop key="hibernate.hbm2ddl.auto">update</prop>
  <!-- 取消bean校验 -->
  <prop key="javax.persistence.validation.mode">none</prop>
  <prop key="hibernate.current_session_context_class">thread</prop>
  </props>
  </property>
<!--   配置映射文件 -->
	<property name="mappingResources">
    <list>
    <value>hibernate/Category.hbm.xml</value>
    <value>hibernate/News.hbm.xml</value>
     <value>hibernate/User.hbm.xml</value>
    </list>
</property>
	
 </bean> 
  <!-- 4.事务管理 -->
  <!-- #1 事务管理器，就是平台，Spring工具产生，依赖于使用 持久方案  (hibernate、jdbc等) -->
  <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
   <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  <!-- 将事务管理注册Spring
  * proxy-target-class="true" :使用cglib
  * proxy-target-class="false":有接口将使用JDK-->
  <tx:annotation-driven transaction-manager="txManager"/>
</beans>